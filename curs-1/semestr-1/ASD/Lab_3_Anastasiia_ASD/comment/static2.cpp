// Использование библиотеки стандартного ввода-вывода
#include <iostream>
// Объявление глобальной статической переменной a типа int и присвоение ей значения 0.
int a = 0;

// Объявление функции, которая ничего не возвращает
void staticMemory()
{
    // Вывести переменную а и перенос строки  
    std::cout << "a: " << a << std::endl;
    // Присвоить переменной а новое значение, равное увеличенному на 1 предыдущему значению.
    // Так как а объявлена глобально в данном файле, ее область видимости распространяется на все функции в файле.
    a += 1;
}

int main()
{
    // Функция вызывается трижды и каждый раз увеличивает значение а на один
    staticMemory(); // Выводит значение а 0 и увеличивает на 1
    staticMemory(); // Выводит значение а 1 и увеличивает на 1
    staticMemory(); // Выводит значение а 2 и увеличивает на 1

    // После вызовов функции значение а = 3
    // Закончить программу и вернуть 0
    return 0;
}

/*
  Переменная а отличается от static_1 областью видимости. Переменная a объявлена как static int a, 
  что означает, что она является локальной статической переменной с локальной областью видимости.
  Она инициализируется только один раз при первом вызове функции и сохраняет свое значение между вызовами функции.
  В static2 переменная a объявлена как глобальная переменная, и ей доступно глобальное пространство имен.
  Она инициализируется при запуске программы и существует на протяжении всего времени выполнения программы.
  Чтобы сделать ее такой же, как в static1, можно объявить ее таким же образом - как static int локально в функции.
  Или же просто сделать ее static для того, чтобы область видимости ограничивалась данным файлом.
*/
